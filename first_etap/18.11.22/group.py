from typing import Set, Any

# Задание 1: +
# Напишите программу, которая выводит чётные числа из списка длиною 300 объектов
#    и останавливается, если встречает число 237.
# a = ''
# for i in range(1, 300):
#     a = a + str(i) + ','
#     if i % 2 == 0:
#         print(i, end = '')
#     elif i == 237:
#         break


# Задание 2:-
# 1. Спросите у пользователя предложение и поделите его по пробелам.
# Если пользователь ввёл меньше шести слов спросите снова, Не принимайте предложения если оно короче 6 символов, спрашивайте снова и снова.
# 2. Поделите полученный лист на 2 равные части (Если число элементов листа нечетное, то длина первой части должна быть на один жлемент больше)
# 3. Переставьте эти две части местами и запишите в лист.



# Задание 3: +
# Вам дан список:
# numbers = [2,4,7,1,8.4,-3.3,7.1,-2,4,-1,7,-43,8,-3,6,9]
# Определите количество четных и не четных.

# n = [2, 4, 7, 1, 8.4, -3.3, 7.1, -2, 4, -1, 7, -43, 8, -3, 6, 9]
# even = 0
# odd = 0
# for i in n:
#     if i % 2 == 0:
#         even += 1
#     else:
#         odd += 1
# print(even)
# print(odd)



# Задание 4: +
# Дан список  целых чисел:
# numbers = [0,2,4,7,1,8,0,-3,7,0,-2,4,0,0,-1,7,-43,0,8,-3,6,9]
# Создайте новый лист и замените отрицательные числа на -1, положительные на число 1, ноль оставить без изменения.

# numbers= [0, 2, 4, 7, 1, 8, 0, -3, 7, 0, -2, 4, 0, 0, -1, 7, -43, 0, 8, -3, 6, 9]
# numbers2 =[]
#
# for item in numbers:
#     if item > 0:
#         numbers2.append(1)
#     elif item < 0:
#         numbers2.append(-1)
#     else:
#         numbers2.append(0)
#
# print(numbers)
# print(numbers2)


# Задание 5: +
# my_list = [2,4,6,8,10,1,3,5,7,9,11,13,17]
# Выведите все элементы списка с четными ИНДЕКСАМИ (то есть A[0], A[2], A[4], ... ])

# my_list = [2, 4, 6, 8, 10, 1, 3, 5, 7, 9, 11, 13, 17]
# for i in range(len(my_list)):
#     if i % 2 == 0:
#         print(my_list[i])


# Задание 6: +
# Дан список чисел:
# numbers = [1,0,-2,4,3,6,6,3,5,8,4,2]
# Выведите все элементы списка, которые больше предущего элемента
# Пример: (numbers: 1,5,2,4,3 Результат: 5,4)
#
# numbers = [1, 0, -2, 4, 3, 6, 6, 3, 5, 8, 4, 2]
# for i in range(1, len(numbers)):
#     if numbers[i] > numbers[i - 1]:
#         print(numbers[i])



# Задание 1: -
    # Нужно создать обычный калькулятор состоящий из знаков +,-,*,/
    # 1. У пользователя просят выбрать знак
    # 2. Просят ввести 1-ое число
    # 3. Просят ввести 2-ое число
    # 4. Вывести результат
    # 5. После результата спросить у пользователя хочет он закончить или нет,
    # если нет то калькулятор должен запускатся сначала
    # 6. Учесть то что деление на ноль невозможно

#



################################################################################



# Задание 2:-
    # Даны три переменные "A", "B" и "C".
    # Изменить значения этих переменных так, чтобы в "A" хранилось значение "A"+"B",
    # в "B" хранилась разность старых значений "C" - "A",
    # а в "C" хранилось сумма старых значений "A" + "B" + "C".
    # Например, A=0, B=2, C=5, тогда новые значения A=2, B=5 и C=7.



################################################################################



# Задание 3:-
    # Пользователь вводит сторону квадрата. Найдите периметр и площадь квадрата.


################################################################################



# Задание 4:-
    # Вам даны несколько последовательностей чисел:
    # sequence_0 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
    # sequence_1 = (14,10,35,45,'60',70,90,0,105,150,'70')
    # sequence_2 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0.0)
    # sequence_3 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70')

    # Нужно проверить, все ли числа в КАЖДОЙ последовательности уникальны.
    # Если в последовательности были найдены дубликаты ---> Выведите на экран: "Последовательность не уникальна."
    # Если в последовательности дубликатов найдено не было ---> Выведите на экран: "Последовательность уникальна."
    # Если в решении задания не присутствует цикл ---> Задание не защитано.


################################################################################



# Задание 5: -
    # Создайте input и спросите у пользоваетля как работает встроенная функция reversed().
    # В терминале пользователя должен ввести пример функции reversed() и отправить это вашей программе.
    # Ваша программа должна исполнить ту часть кода которую ввёл пользователь и вывести на экран результат.
    # Если пользователь ввёл что-то не по синтаксису Python поймайте это с помощью try: except:
    # Если пользователь всё ввёл верно выполните его программу.
    # Если поймали ошибку ---> Спросите снова как работает встроенная функция reversed().




################################################################################



# Задание 6: +
#     Дано четырехзначное число. Верно ли, что цифры в нем расположены по убыванию?
#     Например, 4311 - нет, 4321 - да, 5542 - нет, 5631 - нет, 9871 - да.

# number = list(str(4321))
# if number[0] > number [1] > number[2] > number[3]:
#     print('Да')
# else:
#     print('Нет')
